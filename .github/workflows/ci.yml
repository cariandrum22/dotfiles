name: CI

"on":
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  check-flake:
    name: Check flake
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v14
        with:
          extra-conf: |
            experimental-features = nix-command flakes
            accept-flake-config = true

      - name: Setup Nix cache
        uses: DeterminateSystems/magic-nix-cache-action@v8

      - name: Check flake metadata
        run: nix flake metadata

      - name: Show flake outputs
        run: nix flake show --impure

      - name: Evaluate flake (no build)
        run: |
          # Evaluate all outputs without building
          nix eval .#homeConfigurations."user@x86_64-linux".activationPackage.drvPath --impure
          nix eval .#homeConfigurations."user@x86_64-linux-headless".activationPackage.drvPath --impure
          nix eval .#homeConfigurations."user@aarch64-darwin".activationPackage.drvPath --impure
          nix eval .#packages.x86_64-linux.myxmonad.drvPath --impure 2>/dev/null || true
          nix eval .#packages.x86_64-linux.headless.drvPath --impure 2>/dev/null || true
          nix eval .#devShells.x86_64-linux.default.drvPath --impure
          nix eval .#devShells.aarch64-darwin.default.drvPath --impure

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v14
        with:
          extra-conf: |
            experimental-features = nix-command flakes
            accept-flake-config = true

      - name: Setup Nix cache
        uses: DeterminateSystems/magic-nix-cache-action@v8

      - name: Run pre-commit hooks
        run: |
          # Use pre-commit hooks to run all linters with consistent settings
          nix develop --impure --command pre-commit run --all-files --show-diff-on-failure

  evaluate-home-manager:
    name: Evaluate Home Manager (${{ matrix.system }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - system: x86_64-linux
            os: ubuntu-latest
          - system: aarch64-darwin
            os: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v14
        with:
          extra-conf: |
            experimental-features = nix-command flakes
            accept-flake-config = true

      - name: Setup Nix cache
        uses: DeterminateSystems/magic-nix-cache-action@v8

      - name: Evaluate Home Manager configuration (no build)
        run: |
          # Evaluate only, don't build to avoid space issues
          nix eval .#homeConfigurations."user@${{ matrix.system }}".activationPackage.drvPath --impure
          echo "✓ Home Manager configuration for ${{ matrix.system }} evaluated successfully"

          # Also test headless configuration for Linux
          if [[ "${{ matrix.system }}" == "x86_64-linux" ]]; then
            nix eval .#homeConfigurations."user@x86_64-linux-headless".activationPackage.drvPath --impure
            echo "✓ Home Manager headless configuration for x86_64-linux evaluated successfully"
          fi

  build-xmonad:
    name: Build XMonad
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v14
        with:
          extra-conf: |
            experimental-features = nix-command flakes
            accept-flake-config = true

      - name: Setup Nix cache
        uses: DeterminateSystems/magic-nix-cache-action@v8

      - name: Build XMonad
        run: |
          echo "Building XMonad package..."
          nix build .#packages.x86_64-linux.myxmonad
          echo "✓ XMonad built successfully"
